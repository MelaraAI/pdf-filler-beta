{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/viinc/Downloads/ai-app-template/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n\n// This check can be removed, it is just for tutorial purposes\nexport const hasEnvVars =\n  process.env.NEXT_PUBLIC_SUPABASE_URL &&\n  process.env.NEXT_PUBLIC_SUPABASE_PUBLISHABLE_OR_ANON_KEY;\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB;AAGO,MAAM,aACX,gFACA,QAAQ,GAAG,CAAC,4CAA4C","debugId":null}},
    {"offset": {"line": 21, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/viinc/Downloads/ai-app-template/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { Slot } from \"@radix-ui/react-slot\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2\",\n        sm: \"h-8 rounded-md px-3 text-xs\",\n        lg: \"h-10 rounded-md px-8\",\n        icon: \"h-9 w-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  },\n);\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean;\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\";\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    );\n  },\n);\nButton.displayName = \"Button\";\n\nexport { Button, buttonVariants };\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,ySACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,qMAAA,CAAA,aAAgB,CAC7B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 103, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/viinc/Downloads/ai-app-template/app/pdf-components/PDFUploader.tsx"],"sourcesContent":["import { motion } from 'framer-motion';\r\nimport { Upload } from 'lucide-react';\r\nimport { Button } from '@/components/ui/button';\r\n\r\nexport const PDFUploader = ({ onUpload }: { onUpload: (file: File) => void }) => {\r\n  const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const file = e.target.files?.[0];\r\n    if (file) {\r\n      // Validate file type\r\n      if (file.type === 'application/pdf' || file.name.toLowerCase().endsWith('.pdf')) {\r\n        onUpload(file);\r\n      } else {\r\n        alert('Please select a valid PDF file.');\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <motion.div \r\n      className=\"text-center p-8\"\r\n      initial={{ opacity: 0, y: 20 }}\r\n      animate={{ opacity: 1, y: 0 }}\r\n      transition={{ duration: 0.5 }}\r\n    >\r\n      <motion.div\r\n        whileHover={{ scale: 1.1 }}\r\n        transition={{ type: \"spring\", damping: 20, stiffness: 300 }}\r\n      >\r\n        <Upload className=\"w-16 h-16 text-blue-500 dark:text-blue-400 mx-auto mb-6\" />\r\n      </motion.div>\r\n      \r\n      <motion.div\r\n        whileHover={{ scale: 1.05 }}\r\n        whileTap={{ scale: 0.95 }}\r\n        transition={{ type: \"spring\", damping: 20, stiffness: 300 }}\r\n      >\r\n        <Button \r\n          asChild\r\n          className=\"bg-gradient-to-r from-blue-600 to-indigo-600 hover:from-blue-700 hover:to-indigo-700 text-white px-8 py-4 rounded-xl font-medium shadow-lg hover:shadow-xl transition-all duration-300 backdrop-blur-sm border border-white/10\"\r\n        >\r\n          <label htmlFor=\"file-upload\" className=\"cursor-pointer flex items-center gap-2\">\r\n            <Upload className=\"w-5 h-5\" />\r\n            Upload PDF File\r\n          </label>\r\n        </Button>\r\n      </motion.div>\r\n      \r\n      <p className=\"text-sm text-slate-500 dark:text-slate-400 mt-4\">\r\n        Select a PDF file with form fields to get started\r\n      </p>\r\n      \r\n      <input\r\n        id=\"file-upload\"\r\n        type=\"file\"\r\n        accept=\".pdf,application/pdf\"\r\n        onChange={handleFileChange}\r\n        className=\"hidden\"\r\n      />\r\n    </motion.div>\r\n  );\r\n};\r\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;;AAEO,MAAM,cAAc,CAAC,EAAE,QAAQ,EAAsC;IAC1E,MAAM,mBAAmB,CAAC;QACxB,MAAM,OAAO,EAAE,MAAM,CAAC,KAAK,EAAE,CAAC,EAAE;QAChC,IAAI,MAAM;YACR,qBAAqB;YACrB,IAAI,KAAK,IAAI,KAAK,qBAAqB,KAAK,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,SAAS;gBAC/E,SAAS;YACX,OAAO;gBACL,MAAM;YACR;QACF;IACF;IAEA,qBACE,8OAAC,0LAAA,CAAA,SAAM,CAAC,GAAG;QACT,WAAU;QACV,SAAS;YAAE,SAAS;YAAG,GAAG;QAAG;QAC7B,SAAS;YAAE,SAAS;YAAG,GAAG;QAAE;QAC5B,YAAY;YAAE,UAAU;QAAI;;0BAE5B,8OAAC,0LAAA,CAAA,SAAM,CAAC,GAAG;gBACT,YAAY;oBAAE,OAAO;gBAAI;gBACzB,YAAY;oBAAE,MAAM;oBAAU,SAAS;oBAAI,WAAW;gBAAI;0BAE1D,cAAA,8OAAC,sMAAA,CAAA,SAAM;oBAAC,WAAU;;;;;;;;;;;0BAGpB,8OAAC,0LAAA,CAAA,SAAM,CAAC,GAAG;gBACT,YAAY;oBAAE,OAAO;gBAAK;gBAC1B,UAAU;oBAAE,OAAO;gBAAK;gBACxB,YAAY;oBAAE,MAAM;oBAAU,SAAS;oBAAI,WAAW;gBAAI;0BAE1D,cAAA,8OAAC,2HAAA,CAAA,SAAM;oBACL,OAAO;oBACP,WAAU;8BAEV,cAAA,8OAAC;wBAAM,SAAQ;wBAAc,WAAU;;0CACrC,8OAAC,sMAAA,CAAA,SAAM;gCAAC,WAAU;;;;;;4BAAY;;;;;;;;;;;;;;;;;0BAMpC,8OAAC;gBAAE,WAAU;0BAAkD;;;;;;0BAI/D,8OAAC;gBACC,IAAG;gBACH,MAAK;gBACL,QAAO;gBACP,UAAU;gBACV,WAAU;;;;;;;;;;;;AAIlB","debugId":null}},
    {"offset": {"line": 234, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/viinc/Downloads/ai-app-template/app/pdf-components/SimplePDFViewer.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\r\n\r\nexport interface FormField {\r\n  id: string;\r\n  name: string;\r\n  value: string | boolean | string[];\r\n  type: 'text' | 'checkbox' | 'radio' | 'dropdown';\r\n  options?: string[];\r\n  x: number;\r\n  y: number;\r\n  width: number;\r\n  height: number;\r\n}\r\n\r\ninterface SimplePDFViewerProps {\r\n  file: File;\r\n  filledFields?: FormField[];\r\n  onLoadSuccess?: () => void;\r\n  onLoadError?: (error: Error) => void;\r\n}\r\n\r\nexport const SimplePDFViewer = ({ \r\n  file, \r\n  filledFields,\r\n  onLoadSuccess, \r\n  onLoadError \r\n}: SimplePDFViewerProps) => {\r\n  const [pdfUrl, setPdfUrl] = useState<string>('');\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState<string>('');\r\n\r\n  const generateFilledPDF = async (originalFile: File, fields?: FormField[]): Promise<string> => {\r\n    try {\r\n      // If no fields to fill, just return the original PDF\r\n      if (!fields || fields.length === 0 || fields.every(f => !f.value || f.value === '')) {\r\n        return URL.createObjectURL(originalFile);\r\n      }\r\n\r\n      const { PDFDocument } = await import('pdf-lib');\r\n      const bytes = await originalFile.arrayBuffer();\r\n      const pdfDoc = await PDFDocument.load(bytes);\r\n      const form = pdfDoc.getForm();\r\n\r\n      // Fill the form fields\r\n      fields.forEach(field => {\r\n        if (field.value !== '' && field.value !== false) {\r\n          try {\r\n            const fieldName = field.name;\r\n            const pdfField = form.getFields().find(f => {\r\n              const name = f.getName();\r\n              const normalizedFieldName = fieldName.toLowerCase().replace(/[^\\w\\s]/g, '');\r\n              const normalizedPdfName = name.toLowerCase().replace(/[^\\w\\s]/g, '');\r\n              \r\n              // Exact match\r\n              if (normalizedFieldName === normalizedPdfName) return true;\r\n              \r\n              // Contains match\r\n              if (normalizedFieldName.includes(normalizedPdfName) || \r\n                  normalizedPdfName.includes(normalizedFieldName)) return true;\r\n              \r\n              // Word-based fuzzy matching\r\n              const fieldWords = normalizedFieldName.split(/\\s+/);\r\n              const pdfWords = normalizedPdfName.split(/\\s+/);\r\n              \r\n              const matchingWords = fieldWords.filter(fieldWord => \r\n                pdfWords.some(pdfWord => \r\n                  fieldWord.includes(pdfWord) || pdfWord.includes(fieldWord)\r\n                )\r\n              );\r\n              \r\n              return matchingWords.length >= Math.min(fieldWords.length, pdfWords.length) * 0.6;\r\n            });\r\n\r\n            if (pdfField) {\r\n              const fieldType = pdfField.constructor.name;\r\n              \r\n              if (fieldType.includes('TextField')) {\r\n                const textField = pdfField as unknown as { setText: (text: string) => void };\r\n                textField.setText(String(field.value));\r\n              } else if (fieldType.includes('CheckBox') && typeof field.value === 'boolean') {\r\n                const checkBox = pdfField as unknown as { check: () => void; uncheck: () => void };\r\n                if (field.value) {\r\n                  checkBox.check();\r\n                } else {\r\n                  checkBox.uncheck();\r\n                }\r\n              } else if (fieldType.includes('RadioGroup')) {\r\n                const radioGroup = pdfField as unknown as { select: (option: string) => void };\r\n                radioGroup.select(String(field.value));\r\n              } else if (fieldType.includes('Dropdown')) {\r\n                const dropdown = pdfField as unknown as { select: (option: string) => void };\r\n                const value = Array.isArray(field.value) ? field.value[0] : String(field.value);\r\n                dropdown.select(value);\r\n              }\r\n            }\r\n          } catch (error) {\r\n            console.warn(`Error filling field ${field.name}:`, error);\r\n          }\r\n        }\r\n      });\r\n\r\n      const filledBytes = await pdfDoc.save();\r\n      const blob = new Blob([filledBytes], { type: 'application/pdf' });\r\n      return URL.createObjectURL(blob);\r\n    } catch (error) {\r\n      console.error('Error generating filled PDF:', error);\r\n      // Fallback to original PDF\r\n      return URL.createObjectURL(originalFile);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!file) return;\r\n\r\n    const loadPDF = async () => {\r\n      try {\r\n        setIsLoading(true);\r\n        setError('');\r\n        \r\n        // Generate PDF with filled fields\r\n        const url = await generateFilledPDF(file, filledFields);\r\n        setPdfUrl(prev => {\r\n          // Clean up previous URL\r\n          if (prev) {\r\n            URL.revokeObjectURL(prev);\r\n          }\r\n          return url;\r\n        });\r\n        \r\n        setIsLoading(false);\r\n        onLoadSuccess?.();\r\n      } catch (err) {\r\n        const error = err as Error;\r\n        setError(error.message);\r\n        setIsLoading(false);\r\n        onLoadError?.(error);\r\n      }\r\n    };\r\n\r\n    loadPDF();\r\n\r\n    // Cleanup function\r\n    return () => {\r\n      // Don't revoke URL here as it might still be in use\r\n      // URL cleanup is handled in setPdfUrl\r\n    };\r\n  }, [file, filledFields]);\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center h-96 bg-slate-50 rounded-lg\">\r\n        <div className=\"text-slate-600\">Loading PDF...</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"flex items-center justify-center h-96 bg-red-50 rounded-lg\">\r\n        <div className=\"text-red-600\">Error loading PDF: {error}</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"w-full h-full rounded-lg overflow-hidden border border-slate-200 min-h-[450px]\">\r\n      <iframe\r\n        src={`${pdfUrl}#toolbar=0&navpanes=0&scrollbar=0&statusbar=0&messages=0&scrollbar=0`}\r\n        width=\"100%\"\r\n        height=\"100%\"\r\n        style={{ border: 'none', minHeight: '450px' }}\r\n        title=\"PDF Preview\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 410, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/viinc/Downloads/ai-app-template/app/pdf-components/dashboard/FileUploadPreview.tsx"],"sourcesContent":["import { useRef, useState } from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport { FileText } from 'lucide-react';\r\nimport { PDFUploader } from '../PDFUploader';\r\nimport { SimplePDFViewer } from '../SimplePDFViewer';\r\n\r\nexport interface FormField {\r\n  id: string;\r\n  name: string;\r\n  value: string | boolean | string[];\r\n  type: 'text' | 'checkbox' | 'radio' | 'dropdown';\r\n  options?: string[];\r\n  x: number;\r\n  y: number;\r\n  width: number;\r\n  height: number;\r\n}\r\n\r\nexport interface FileUploadPreviewProps {\r\n  onPdfLoad?: (file: File) => void;\r\n  onFieldsExtracted?: (fields: FormField[]) => void;\r\n  filledFields?: FormField[];\r\n}\r\n\r\nexport default function FileUploadPreview({ onPdfLoad, onFieldsExtracted, filledFields }: FileUploadPreviewProps = {}) {\r\n  const [pdfFile, setPdfFile] = useState<File | null>(null);\r\n  const [pdfError, setPdfError] = useState('');\r\n  const containerRef = useRef<HTMLDivElement>(null);\r\n\r\n  const extractFormFields = async (file: File): Promise<FormField[]> => {\r\n    try {\r\n      const { PDFDocument } = await import('pdf-lib');\r\n      const bytes = await file.arrayBuffer();\r\n      const pdfDoc = await PDFDocument.load(bytes);\r\n      const form = pdfDoc.getForm();\r\n      const fields = form.getFields();\r\n\r\n      // Also extract text content to find field labels\r\n      const textContent: { text: string; x: number; y: number }[] = [];\r\n      try {\r\n        // Use pdfjs-dist to extract text content and positions\r\n        const pdfjsLib = await import('pdfjs-dist');\r\n        const loadingTask = pdfjsLib.getDocument({ data: bytes });\r\n        const pdfDocument = await loadingTask.promise;\r\n        \r\n        for (let pageNum = 1; pageNum <= pdfDocument.numPages; pageNum++) {\r\n          const page = await pdfDocument.getPage(pageNum);\r\n          const textContentObj = await page.getTextContent();\r\n          \r\n          textContentObj.items.forEach((item: unknown) => {\r\n            const textItem = item as { str?: string; transform?: number[] };\r\n            if (textItem.str && textItem.str.trim() && textItem.transform) {\r\n              textContent.push({\r\n                text: textItem.str.trim(),\r\n                x: textItem.transform[4],\r\n                y: textItem.transform[5]\r\n              });\r\n            }\r\n          });\r\n        }\r\n      } catch (error) {\r\n        console.warn('Could not extract text content for field labeling:', error);\r\n      }\r\n\r\n      return fields.map((field, index) => {\r\n        const name = field.getName();\r\n        const fieldType = field.constructor.name;\r\n        \r\n        // Get field position if available\r\n        let fieldX = 0;\r\n        let fieldY = 0;\r\n        let fieldWidth = 150;\r\n        let fieldHeight = 20;\r\n        \r\n        try {\r\n          const acroField = (field as unknown as { \r\n            acroField?: { \r\n              getWidgets?: () => { \r\n                getRectangle?: () => { x: number; y: number; width: number; height: number } \r\n              }[] \r\n            } \r\n          }).acroField;\r\n          const rect = acroField?.getWidgets?.()?.[0]?.getRectangle?.();\r\n          if (rect) {\r\n            fieldX = rect.x;\r\n            fieldY = rect.y;\r\n            fieldWidth = rect.width;\r\n            fieldHeight = rect.height;\r\n          }\r\n        } catch (error) {\r\n          console.warn(`Could not get position for field ${name}:`, error);\r\n        }\r\n        \r\n        // Try to find nearby text that could be a label\r\n        let displayName = name;\r\n        let bestLabel = '';\r\n        let closestDistance = Infinity;\r\n        const nearbyLabels: { text: string; distance: number }[] = [];\r\n        \r\n        // Look for text near this field\r\n        textContent.forEach(textItem => {\r\n          const distance = Math.sqrt(\r\n            Math.pow(textItem.x - fieldX, 2) + Math.pow(textItem.y - fieldY, 2)\r\n          );\r\n          \r\n          // Check if this text looks like a field label (not too far away)\r\n          if (distance < 200 && textItem.text.length > 2 && textItem.text.length < 50) {\r\n            const text = textItem.text.trim();\r\n            \r\n            // Skip common non-label text\r\n            if (!/^(yes|no|x|check|•|\\d+|$)$/i.test(text) && \r\n                !text.includes('_') &&\r\n                !/^\\d+$/.test(text)) {\r\n              \r\n              nearbyLabels.push({ text, distance });\r\n              \r\n              // Prefer text that ends with colon or looks like a label\r\n              const isLikelyLabel = text.endsWith(':') || \r\n                                  text.includes('Name') || \r\n                                  text.includes('Address') ||\r\n                                  text.includes('Date') ||\r\n                                  text.includes('Phone') ||\r\n                                  text.includes('Email') ||\r\n                                  text.includes('Number') ||\r\n                                  text.includes('Effective') ||\r\n                                  text.includes('Insured') ||\r\n                                  text.includes('Contact') ||\r\n                                  text.includes('Company') ||\r\n                                  text.includes('Physical') ||\r\n                                  text.includes('Primary') ||\r\n                                  text.includes('Producer') ||\r\n                                  text.includes('Agency') ||\r\n                                  text.includes('Network') ||\r\n                                  text.includes('Broker') ||\r\n                                  text.includes('Client') ||\r\n                                  text.includes('Website') ||\r\n                                  text.includes('Information') ||\r\n                                  /^[A-Z][a-z\\s]+/.test(text);\r\n              \r\n              if (isLikelyLabel && distance < closestDistance) {\r\n                closestDistance = distance;\r\n                bestLabel = text.replace(/:$/, '').trim();\r\n              }\r\n            }\r\n          }\r\n        });\r\n        \r\n        // Debug logging for field mapping\r\n        console.log('=== PDF FIELD MAPPING DEBUG ===');\r\n        console.log(`Field Name: \"${name}\"`);\r\n        console.log(`Field Type: ${fieldType}`);\r\n        console.log(`Field Position: x=${fieldX}, y=${fieldY}`);\r\n        console.log(`Best Label Found: \"${bestLabel}\" (distance: ${closestDistance})`);\r\n        console.log('Nearby Labels:', nearbyLabels.sort((a, b) => a.distance - b.distance).slice(0, 5));\r\n        console.log('===============================');\r\n        \r\n        // Use the found label if it's good, otherwise fall back to mapping\r\n        if (bestLabel && bestLabel.length > 2) {\r\n          displayName = bestLabel;\r\n        } else {\r\n          // Clean up common field naming patterns\r\n          if (name) {\r\n            // Common field name mappings\r\n            const fieldMappings: { [key: string]: string } = {\r\n              'fname': 'First Name',\r\n              'lname': 'Last Name',\r\n              'fullname': 'Full Name',\r\n              'email': 'Email Address',\r\n              'phone': 'Phone Number',\r\n              'address': 'Address',\r\n              'city': 'City',\r\n              'state': 'State',\r\n              'zip': 'ZIP Code',\r\n              'zipcode': 'ZIP Code',\r\n              'dob': 'Date of Birth',\r\n              'ssn': 'Social Security Number',\r\n              'employer': 'Employer',\r\n              'occupation': 'Occupation',\r\n              'signature': 'Signature',\r\n              'date': 'Date',\r\n              'amount': 'Amount',\r\n              'total': 'Total',\r\n              'tax': 'Tax',\r\n              'income': 'Income',\r\n              'expense': 'Expense',\r\n              'notes': 'Notes',\r\n              'comments': 'Comments',\r\n              'description': 'Description',\r\n              'insured': 'Named Insured',\r\n              'effective': 'Requested Effective Date',\r\n              'producer': 'Producer Name',\r\n              'agency': 'Agency Name',\r\n              'network': 'Agency Network Affiliations',\r\n              'broker': 'Broker Information',\r\n              'client': 'Client Information',\r\n              'contact': 'Primary Contact Name',\r\n              'website': 'Company Website'\r\n            };\r\n            \r\n            // Check for exact matches first\r\n            const lowerName = name.toLowerCase();\r\n            if (fieldMappings[lowerName]) {\r\n              displayName = fieldMappings[lowerName];\r\n            } else {\r\n              // Remove common prefixes and suffixes\r\n              displayName = name\r\n                .replace(/^(field|text|input|form)_?/i, '')\r\n                .replace(/_?(field|input|text)$/i, '')\r\n                // Convert camelCase to readable text\r\n                .replace(/([A-Z])/g, ' $1')\r\n                // Convert snake_case to readable text  \r\n                .replace(/_/g, ' ')\r\n                // Convert dots to spaces\r\n                .replace(/\\./g, ' ')\r\n                // Capitalize first letter of each word\r\n                .split(' ')\r\n                .map(word => word.charAt(0).toUpperCase() + word.slice(1).toLowerCase())\r\n                .join(' ')\r\n                .trim();\r\n                \r\n              // Handle common field patterns\r\n              if (displayName.toLowerCase().includes('date') && displayName.toLowerCase().includes('sign')) {\r\n                displayName = 'Signature Date';\r\n              } else if (displayName.toLowerCase().includes('name') && displayName.toLowerCase().includes('sign')) {\r\n                displayName = 'Signature Name';\r\n              } else if (displayName.toLowerCase().includes('sign')) {\r\n                displayName = 'Signature';\r\n              } else if (/text\\d+/i.test(name)) {\r\n                // For generic text fields, try to infer purpose from position or create a generic name\r\n                displayName = `Text Field ${index + 1}`;\r\n              }\r\n            }\r\n          }\r\n        }\r\n        \r\n        // Fallback to a generic name if we couldn't extract anything meaningful\r\n        if (!displayName || displayName.trim() === '') {\r\n          displayName = `Field ${index + 1}`;\r\n        }\r\n        \r\n        // Create and log final mapping\r\n        let finalMapping = {\r\n          pdfFieldName: name,\r\n          displayName: displayName,\r\n          bestLabel: bestLabel,\r\n          fieldType: fieldType,\r\n          coordinates: { x: fieldX, y: fieldY },\r\n          hardcoded: false,\r\n          smartMapped: false\r\n        };\r\n        \r\n        // Enhanced logic to connect text labels to fields\r\n        if (bestLabel) {\r\n          // Check if this looks like \"Named Insured\" field\r\n          if (bestLabel.toLowerCase().includes('named') && bestLabel.toLowerCase().includes('insured')) {\r\n            console.log('🎯 SMART MAPPING FOUND:');\r\n            console.log(`PDF Field: \"${name}\" maps to Display Name: \"Named Insured\"`);\r\n            console.log(`Based on nearby text: \"${bestLabel}\"`);\r\n            console.log('This means when user types \"Named Insured: Vincent Melara\", it should fill this field');\r\n            displayName = 'Named Insured';\r\n            finalMapping = {\r\n              ...finalMapping,\r\n              displayName: 'Named Insured',\r\n              smartMapped: true\r\n            };\r\n          }\r\n          // Check for other common field patterns\r\n          else if (bestLabel.toLowerCase().includes('effective') && bestLabel.toLowerCase().includes('date')) {\r\n            displayName = 'Requested Effective Date';\r\n            finalMapping = { ...finalMapping, displayName: 'Requested Effective Date', smartMapped: true };\r\n          }\r\n          else if (bestLabel.toLowerCase().includes('company') && bestLabel.toLowerCase().includes('phone')) {\r\n            displayName = 'Company Phone';\r\n            finalMapping = { ...finalMapping, displayName: 'Company Phone', smartMapped: true };\r\n          }\r\n          else if (bestLabel.toLowerCase().includes('physical') && bestLabel.toLowerCase().includes('address')) {\r\n            displayName = 'Physical U.S. Address';\r\n            finalMapping = { ...finalMapping, displayName: 'Physical U.S. Address', smartMapped: true };\r\n          }\r\n          else if (bestLabel.toLowerCase().includes('primary') && bestLabel.toLowerCase().includes('contact')) {\r\n            displayName = 'Primary Contact Name';\r\n            finalMapping = { ...finalMapping, displayName: 'Primary Contact Name', smartMapped: true };\r\n          }\r\n        }\r\n        \r\n        console.log('🔗 FINAL FIELD MAPPING:', finalMapping);\r\n        \r\n        // Store mapping globally for debugging\r\n        const globalWindow = window as unknown as { pdfFieldMappings?: typeof finalMapping[] };\r\n        if (!globalWindow.pdfFieldMappings) {\r\n          globalWindow.pdfFieldMappings = [];\r\n        }\r\n        globalWindow.pdfFieldMappings.push(finalMapping);\r\n        \r\n        let type: FormField['type'] = 'text';\r\n        let value: FormField['value'] = '';\r\n        let options: string[] | undefined;\r\n\r\n        try {\r\n          if (fieldType.includes('TextField')) {\r\n            type = 'text';\r\n            value = (field as unknown as { getText?: () => string }).getText?.() || '';\r\n          } else if (fieldType.includes('CheckBox')) {\r\n            type = 'checkbox';\r\n            value = (field as unknown as { isChecked?: () => boolean }).isChecked?.() || false;\r\n          } else if (fieldType.includes('RadioGroup')) {\r\n            type = 'radio';\r\n            const radioField = field as unknown as { \r\n              getOptions?: () => string[];\r\n              getSelected?: () => string;\r\n            };\r\n            options = radioField.getOptions?.() || [];\r\n            value = radioField.getSelected?.() || '';\r\n          } else if (fieldType.includes('Dropdown')) {\r\n            type = 'dropdown';\r\n            const dropdownField = field as unknown as {\r\n              getOptions?: () => string[];\r\n              getSelected?: () => string[];\r\n            };\r\n            options = dropdownField.getOptions?.() || [];\r\n            value = dropdownField.getSelected?.() || [];\r\n          }\r\n        } catch (error) {\r\n          console.warn(`Error processing field ${name}:`, error);\r\n        }\r\n\r\n        return {\r\n          id: `field_${index}`,\r\n          name: displayName,\r\n          value,\r\n          type,\r\n          options,\r\n          x: fieldX,\r\n          y: fieldY,\r\n          width: fieldWidth,\r\n          height: fieldHeight,\r\n        };\r\n      });\r\n    } catch (error) {\r\n      console.error('Error extracting form fields:', error);\r\n      return [];\r\n    }\r\n  };\r\n\r\n  const handleUpload = async (file: File) => {\r\n    setPdfFile(file);\r\n    setPdfError('');\r\n    \r\n    // Clear previous mappings\r\n    const globalWindow = window as unknown as { pdfFieldMappings?: unknown[] };\r\n    globalWindow.pdfFieldMappings = [];\r\n    \r\n    if (onPdfLoad) {\r\n      onPdfLoad(file);\r\n    }\r\n    \r\n    // Extract form fields\r\n    const extractedFields = await extractFormFields(file);\r\n    \r\n    // Log complete mapping summary\r\n    console.log('📋 COMPLETE PDF FIELD MAPPING SUMMARY:');\r\n    console.table(globalWindow.pdfFieldMappings);\r\n    \r\n    if (onFieldsExtracted) {\r\n      onFieldsExtracted(extractedFields);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-white rounded-xl shadow-lg border border-slate-200 overflow-hidden flex flex-col min-h-[600px] w-full\">\r\n      <div className=\"p-4 bg-slate-50 border-b border-slate-200 flex-shrink-0\">\r\n        <h2 className=\"text-lg font-semibold text-slate-900 flex items-center\">\r\n          <FileText className=\"w-5 h-5 text-slate-600 mr-2\" />\r\n          Document Preview\r\n        </h2>\r\n      </div>\r\n\r\n      <div className=\"flex-1 bg-slate-100 flex items-center justify-center p-4 relative min-h-[500px]\" ref={containerRef}>\r\n        {!pdfFile ? (\r\n          <PDFUploader onUpload={handleUpload} />\r\n        ) : pdfError ? (\r\n          <div className=\"text-center text-red-600\">\r\n            <p className=\"font-semibold\">PDF Error</p>\r\n            <p>{pdfError}</p>\r\n            <button\r\n              onClick={() => {\r\n                setPdfFile(null);\r\n                setPdfError('');\r\n              }}\r\n              className=\"mt-4 px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\"\r\n            >\r\n              Try Another File\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <div className=\"relative w-full h-full\">\r\n            <SimplePDFViewer\r\n              file={pdfFile}\r\n              filledFields={filledFields}\r\n              onLoadSuccess={() => {}}\r\n              onLoadError={(error) => {\r\n                console.error('PDF load error:', error);\r\n                setPdfError('Failed to load PDF file. Please try a different file.');\r\n              }}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 815, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/viinc/Downloads/ai-app-template/app/pdf-components/dashboard/AutoFillInstructions.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { memo, useCallback, useEffect } from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport { Sparkles } from 'lucide-react';\r\n\r\ninterface Props {\r\n  instructions: string;\r\n  setInstructions: (s: string) => void;\r\n  autoFill: () => void;\r\n  disabled: boolean;\r\n}\r\n\r\nconst AutoFillInstructions = memo(function AutoFillInstructions({\r\n  instructions,\r\n  setInstructions,\r\n  autoFill,\r\n  disabled,\r\n}: Props) {\r\n  const handleInstructionsChange = useCallback(\r\n    (e: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n      setInstructions(e.target.value);\r\n    },\r\n    [setInstructions]\r\n  );\r\n\r\n  // Inject the ElevenLabs widget dynamically\r\n  useEffect(() => {\r\n    const container = document.getElementById('voice-widget-inline');\r\n    if (!container) return;\r\n\r\n    container.innerHTML = '';\r\n\r\n    const widget = document.createElement('elevenlabs-convai');\r\n    widget.setAttribute('agent-id', 'agent_2601k19e0awtegzbav9nh55vph4w');\r\n    widget.setAttribute('show-branding', 'false');\r\n\r\n    const script = document.createElement('script');\r\n    script.src = 'https://unpkg.com/@elevenlabs/convai-widget-embed';\r\n    script.async = true;\r\n    script.type = 'text/javascript';\r\n\r\n    container.appendChild(widget);\r\n    container.appendChild(script);\r\n\r\n    return () => {\r\n      container.innerHTML = '';\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <motion.div \r\n      className=\"bg-white/80 dark:bg-slate-900/80 backdrop-blur-lg rounded-xl shadow-lg border border-white/20 dark:border-slate-700/30 overflow-hidden\"\r\n      initial={{ opacity: 0, y: 20 }}\r\n      animate={{ opacity: 1, y: 0 }}\r\n      transition={{ duration: 0.5 }}\r\n      whileHover={{\r\n        boxShadow: \"0 20px 40px rgba(59, 130, 246, 0.1)\",\r\n        transition: { duration: 0.3 },\r\n      }}\r\n    >\r\n      <motion.div \r\n        className=\"p-4 bg-gradient-to-r from-slate-50/90 to-blue-50/90 dark:from-slate-800/90 dark:to-blue-900/30 border-b border-white/20 dark:border-slate-700/30 flex items-center backdrop-blur-sm\"\r\n        whileHover={{ scale: 1.01 }}\r\n        transition={{ type: \"spring\", damping: 20, stiffness: 300 }}\r\n      >\r\n        <motion.div\r\n          whileHover={{ rotate: 180 }}\r\n          transition={{ duration: 0.6 }}\r\n        >\r\n          <Sparkles className=\"w-5 h-5 text-blue-600 dark:text-blue-400 mr-2\" />\r\n        </motion.div>\r\n        <h2 className=\"text-lg font-semibold text-slate-900 dark:text-white\">\r\n          Auto-Fill Instructions\r\n        </h2>\r\n      </motion.div>\r\n      <div className=\"p-6\">\r\n        <motion.textarea\r\n          value={instructions}\r\n          onChange={handleInstructionsChange}\r\n          placeholder={`Enter field-value pairs, one per line. Examples:\\nNamed Insured: Vincent Melara\\nRequested Effective Date: 01/15/2024\\nCompany Phone: (555) 123-4567\\nPhysical U.S. Address: 123 Main St, City, ST 12345\\n\\nYou can also manually edit fields below and click 'Apply Changes to PDF' to update the document preview.`}\r\n          className=\"w-full h-32 border border-slate-300/50 dark:border-slate-600/50 rounded-lg p-4 text-sm bg-white/50 dark:bg-slate-800/50 backdrop-blur-sm focus:ring-2 focus:ring-blue-500/50 focus:border-blue-500/50 transition-all duration-300 resize-none text-slate-900 dark:text-white placeholder:text-slate-500 dark:placeholder:text-slate-400\"\r\n          whileFocus={{ scale: 1.02 }}\r\n          transition={{ type: \"spring\", damping: 20, stiffness: 300 }}\r\n        />\r\n        <motion.p \r\n          className=\"text-xs text-slate-500 dark:text-slate-400 mt-3 leading-relaxed\"\r\n          initial={{ opacity: 0 }}\r\n          animate={{ opacity: 1 }}\r\n          transition={{ delay: 0.3 }}\r\n        >\r\n          Use format: &quot;Field Name: Value&quot; or &quot;Field Name = Value&quot;, one per line.\r\n          Click &quot;Apply Changes to PDF&quot; to update the preview with all field values.\r\n        </motion.p>\r\n\r\n        {/* Flex row for button and voice widget */}\r\n        <div className=\"mt-6 flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4\">\r\n          <motion.button\r\n            onClick={autoFill}\r\n            disabled={disabled}\r\n            className=\"w-full sm:w-auto bg-gradient-to-r from-teal-600 to-cyan-600 hover:from-teal-700 hover:to-cyan-700 text-white px-6 py-3 rounded-lg font-medium shadow-lg hover:shadow-xl transition-all duration-300 disabled:opacity-50 disabled:cursor-not-allowed backdrop-blur-sm border border-white/10\"\r\n            whileHover={{ scale: disabled ? 1 : 1.05 }}\r\n            whileTap={{ scale: disabled ? 1 : 0.95 }}\r\n            transition={{ type: \"spring\", damping: 20, stiffness: 300 }}\r\n          >\r\n            Apply Changes to PDF\r\n          </motion.button>\r\n\r\n          {/* Voice widget container */}\r\n          <motion.div\r\n            id=\"voice-widget-inline\"\r\n            className=\"min-h-[60px] w-full sm:w-[300px] flex items-center justify-center bg-white/30 dark:bg-slate-800/30 backdrop-blur-sm rounded-lg border border-white/20 dark:border-slate-700/30\"\r\n            initial={{ opacity: 0, scale: 0.9 }}\r\n            animate={{ opacity: 1, scale: 1 }}\r\n            transition={{ delay: 0.5, duration: 0.5 }}\r\n          />\r\n        </div>\r\n      </div>\r\n    </motion.div>\r\n  );\r\n});\r\n\r\nexport default AutoFillInstructions;\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAJA;;;;;AAaA,MAAM,qCAAuB,CAAA,GAAA,qMAAA,CAAA,OAAI,AAAD,EAAE,SAAS,qBAAqB,EAC9D,YAAY,EACZ,eAAe,EACf,QAAQ,EACR,QAAQ,EACF;IACN,MAAM,2BAA2B,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EACzC,CAAC;QACC,gBAAgB,EAAE,MAAM,CAAC,KAAK;IAChC,GACA;QAAC;KAAgB;IAGnB,2CAA2C;IAC3C,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,YAAY,SAAS,cAAc,CAAC;QAC1C,IAAI,CAAC,WAAW;QAEhB,UAAU,SAAS,GAAG;QAEtB,MAAM,SAAS,SAAS,aAAa,CAAC;QACtC,OAAO,YAAY,CAAC,YAAY;QAChC,OAAO,YAAY,CAAC,iBAAiB;QAErC,MAAM,SAAS,SAAS,aAAa,CAAC;QACtC,OAAO,GAAG,GAAG;QACb,OAAO,KAAK,GAAG;QACf,OAAO,IAAI,GAAG;QAEd,UAAU,WAAW,CAAC;QACtB,UAAU,WAAW,CAAC;QAEtB,OAAO;YACL,UAAU,SAAS,GAAG;QACxB;IACF,GAAG,EAAE;IAEL,qBACE,8OAAC,0LAAA,CAAA,SAAM,CAAC,GAAG;QACT,WAAU;QACV,SAAS;YAAE,SAAS;YAAG,GAAG;QAAG;QAC7B,SAAS;YAAE,SAAS;YAAG,GAAG;QAAE;QAC5B,YAAY;YAAE,UAAU;QAAI;QAC5B,YAAY;YACV,WAAW;YACX,YAAY;gBAAE,UAAU;YAAI;QAC9B;;0BAEA,8OAAC,0LAAA,CAAA,SAAM,CAAC,GAAG;gBACT,WAAU;gBACV,YAAY;oBAAE,OAAO;gBAAK;gBAC1B,YAAY;oBAAE,MAAM;oBAAU,SAAS;oBAAI,WAAW;gBAAI;;kCAE1D,8OAAC,0LAAA,CAAA,SAAM,CAAC,GAAG;wBACT,YAAY;4BAAE,QAAQ;wBAAI;wBAC1B,YAAY;4BAAE,UAAU;wBAAI;kCAE5B,cAAA,8OAAC,0MAAA,CAAA,WAAQ;4BAAC,WAAU;;;;;;;;;;;kCAEtB,8OAAC;wBAAG,WAAU;kCAAuD;;;;;;;;;;;;0BAIvE,8OAAC;gBAAI,WAAU;;kCACb,8OAAC,0LAAA,CAAA,SAAM,CAAC,QAAQ;wBACd,OAAO;wBACP,UAAU;wBACV,aAAa,CAAC,oTAAoT,CAAC;wBACnU,WAAU;wBACV,YAAY;4BAAE,OAAO;wBAAK;wBAC1B,YAAY;4BAAE,MAAM;4BAAU,SAAS;4BAAI,WAAW;wBAAI;;;;;;kCAE5D,8OAAC,0LAAA,CAAA,SAAM,CAAC,CAAC;wBACP,WAAU;wBACV,SAAS;4BAAE,SAAS;wBAAE;wBACtB,SAAS;4BAAE,SAAS;wBAAE;wBACtB,YAAY;4BAAE,OAAO;wBAAI;kCAC1B;;;;;;kCAMD,8OAAC;wBAAI,WAAU;;0CACb,8OAAC,0LAAA,CAAA,SAAM,CAAC,MAAM;gCACZ,SAAS;gCACT,UAAU;gCACV,WAAU;gCACV,YAAY;oCAAE,OAAO,WAAW,IAAI;gCAAK;gCACzC,UAAU;oCAAE,OAAO,WAAW,IAAI;gCAAK;gCACvC,YAAY;oCAAE,MAAM;oCAAU,SAAS;oCAAI,WAAW;gCAAI;0CAC3D;;;;;;0CAKD,8OAAC,0LAAA,CAAA,SAAM,CAAC,GAAG;gCACT,IAAG;gCACH,WAAU;gCACV,SAAS;oCAAE,SAAS;oCAAG,OAAO;gCAAI;gCAClC,SAAS;oCAAE,SAAS;oCAAG,OAAO;gCAAE;gCAChC,YAAY;oCAAE,OAAO;oCAAK,UAAU;gCAAI;;;;;;;;;;;;;;;;;;;;;;;;AAMpD;uCAEe","debugId":null}},
    {"offset": {"line": 1021, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/viinc/Downloads/ai-app-template/app/pdf-components/dashboard/ManualFieldEditor.tsx"],"sourcesContent":["import { memo, useCallback } from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport { Edit3 } from 'lucide-react';\r\n\r\nexport interface FormField {\r\n  id: string;\r\n  name: string;\r\n  value: string | boolean | string[];\r\n  type: 'text' | 'checkbox' | 'radio' | 'dropdown';\r\n  options?: string[];\r\n  x: number;\r\n  y: number;\r\n  width: number;\r\n  height: number;\r\n}\r\n\r\ninterface Props {\r\n  formFields: FormField[];\r\n  updateFieldValue: (id: string, value: string | boolean | string[]) => void;\r\n}\r\n\r\nconst ManualFieldEditor = memo(function ManualFieldEditor({ formFields, updateFieldValue }: Props) {\r\n  const renderField = useCallback((field: FormField) => {\r\n    switch (field.type) {\r\n      case 'checkbox':\r\n        return (\r\n          <div className=\"p-4 bg-white/50 dark:bg-slate-800/50 backdrop-blur-sm rounded-lg border border-slate-200/50 dark:border-slate-600/50\">\r\n            <label className=\"flex items-center space-x-3 cursor-pointer\">\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={field.value as boolean}\r\n                onChange={(e) => updateFieldValue(field.id, e.target.checked)}\r\n                className=\"rounded border-slate-300 dark:border-slate-600 text-blue-600 focus:ring-blue-500 focus:ring-2\"\r\n              />\r\n              <span className=\"text-sm font-medium text-slate-700 dark:text-slate-300\">{field.name}</span>\r\n            </label>\r\n          </div>\r\n        );\r\n\r\n      case 'radio':\r\n        return (\r\n          <div className=\"p-4 bg-white/50 dark:bg-slate-800/50 backdrop-blur-sm rounded-lg border border-slate-200/50 dark:border-slate-600/50\">\r\n            <label className=\"block text-sm font-medium text-slate-700 dark:text-slate-300 mb-3\">{field.name}</label>\r\n            <div className=\"space-y-3\">\r\n              {field.options?.map((option) => (\r\n                <label key={option} className=\"flex items-center space-x-3 cursor-pointer\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    name={field.id}\r\n                    value={option}\r\n                    checked={field.value === option}\r\n                    onChange={(e) => updateFieldValue(field.id, e.target.value)}\r\n                    className=\"border-slate-300 dark:border-slate-600 text-blue-600 focus:ring-blue-500 focus:ring-2\"\r\n                  />\r\n                  <span className=\"text-sm text-slate-700 dark:text-slate-300\">{option}</span>\r\n                </label>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        );\r\n\r\n      case 'dropdown':\r\n        return (\r\n          <div className=\"p-4 bg-white/50 dark:bg-slate-800/50 backdrop-blur-sm rounded-lg border border-slate-200/50 dark:border-slate-600/50\">\r\n            <label className=\"block text-sm font-medium text-slate-700 dark:text-slate-300 mb-2\">{field.name}</label>\r\n            <select\r\n              value={Array.isArray(field.value) ? field.value[0] || '' : field.value as string}\r\n              onChange={(e) => updateFieldValue(field.id, e.target.value)}\r\n              className=\"w-full border border-slate-300/50 dark:border-slate-600/50 rounded-lg px-4 py-3 bg-white/50 dark:bg-slate-800/50 backdrop-blur-sm focus:ring-2 focus:ring-blue-500/50 focus:border-blue-500/50 transition-all duration-300 text-slate-900 dark:text-white\"\r\n            >\r\n              <option value=\"\">Select an option</option>\r\n              {field.options?.map((option) => (\r\n                <option key={option} value={option}>{option}</option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n        );\r\n\r\n      default: // text\r\n        return (\r\n          <div className=\"p-4 bg-white/50 dark:bg-slate-800/50 backdrop-blur-sm rounded-lg border border-slate-200/50 dark:border-slate-600/50\">\r\n            <label className=\"block text-sm font-medium text-slate-700 dark:text-slate-300 mb-2\">{field.name}</label>\r\n            <input\r\n              type=\"text\"\r\n              value={field.value as string}\r\n              onChange={(e) => updateFieldValue(field.id, e.target.value)}\r\n              className=\"w-full border border-slate-300/50 dark:border-slate-600/50 rounded-lg px-4 py-3 bg-white/50 dark:bg-slate-800/50 backdrop-blur-sm focus:ring-2 focus:ring-blue-500/50 focus:border-blue-500/50 transition-all duration-300 text-slate-900 dark:text-white placeholder:text-slate-500 dark:placeholder:text-slate-400\"\r\n              placeholder={`Enter ${field.name.toLowerCase()}`}\r\n            />\r\n          </div>\r\n        );\r\n    }\r\n  }, [updateFieldValue]);\r\n\r\n  return (\r\n    <motion.div \r\n      className=\"bg-white/80 dark:bg-slate-900/80 backdrop-blur-lg rounded-xl shadow-lg border border-white/20 dark:border-slate-700/30 overflow-hidden\"\r\n      initial={{ opacity: 0, y: 20 }}\r\n      animate={{ opacity: 1, y: 0 }}\r\n      transition={{ duration: 0.5, delay: 0.1 }}\r\n      whileHover={{\r\n        boxShadow: \"0 20px 40px rgba(59, 130, 246, 0.1)\",\r\n        transition: { duration: 0.3 },\r\n      }}\r\n    >\r\n      <motion.div \r\n        className=\"p-4 bg-gradient-to-r from-slate-50/90 to-indigo-50/90 dark:from-slate-800/90 dark:to-indigo-900/30 border-b border-white/20 dark:border-slate-700/30 flex items-center backdrop-blur-sm\"\r\n        whileHover={{ scale: 1.01 }}\r\n        transition={{ type: \"spring\", damping: 20, stiffness: 300 }}\r\n      >\r\n        <motion.div\r\n          whileHover={{ rotate: 180 }}\r\n          transition={{ duration: 0.6 }}\r\n        >\r\n          <Edit3 className=\"w-5 h-5 text-indigo-600 dark:text-indigo-400 mr-2\" />\r\n        </motion.div>\r\n        <h2 className=\"text-lg font-semibold text-slate-900 dark:text-white\">Manual Field Editor</h2>\r\n      </motion.div>\r\n      <div className=\"p-6 space-y-4 max-h-96 overflow-y-auto\">\r\n        {formFields.length === 0 ? (\r\n          <motion.p \r\n            className=\"text-slate-500 dark:text-slate-400 text-center py-8\"\r\n            initial={{ opacity: 0 }}\r\n            animate={{ opacity: 1 }}\r\n            transition={{ delay: 0.3 }}\r\n          >\r\n            No form fields found. Upload a PDF with form fields to get started.\r\n          </motion.p>\r\n        ) : (\r\n          formFields.map((field, index) => (\r\n            <motion.div\r\n              key={field.id}\r\n              initial={{ opacity: 0, x: -20 }}\r\n              animate={{ opacity: 1, x: 0 }}\r\n              transition={{ delay: index * 0.1 }}\r\n            >\r\n              {renderField(field)}\r\n            </motion.div>\r\n          ))\r\n        )}\r\n      </div>\r\n    </motion.div>\r\n  );\r\n});\r\n\r\nexport default ManualFieldEditor;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1320, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/viinc/Downloads/ai-app-template/app/pdf-components/dashboard/page.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useState, useCallback, useRef } from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport { FileText, Download, ArrowLeft } from 'lucide-react';\r\nimport { Button } from '@/components/ui/button';\r\nimport { useRouter } from 'next/navigation';\r\nimport ThemeToggle from '@/app/components/theme-toggle';\r\nimport FileUploadPreview from './FileUploadPreview';\r\nimport AutoFillInstructions from './AutoFillInstructions';\r\nimport ManualFieldEditor from './ManualFieldEditor';\r\n\r\ninterface FormField {\r\n  id: string;\r\n  name: string;\r\n  value: string | boolean | string[];\r\n  type: 'text' | 'checkbox' | 'radio' | 'dropdown';\r\n  options?: string[];\r\n  x: number;\r\n  y: number;\r\n  width: number;\r\n  height: number;\r\n}\r\n\r\nfunction App() {\r\n  const [pdfFile, setPdfFile] = useState<File | null>(null);\r\n  const [instructions, setInstructions] = useState('');\r\n  const [formFields, setFormFields] = useState<FormField[]>([]);\r\n  const [filledFields, setFilledFields] = useState<FormField[]>([]);\r\n  const instructionsRef = useRef('');\r\n  const router = useRouter();\r\n\r\n  // Keep ref in sync with instructions state\r\n  const setInstructionsWithRef = useCallback((newInstructions: string) => {\r\n    setInstructions(newInstructions);\r\n    instructionsRef.current = newInstructions;\r\n  }, []);\r\n\r\n  const updateFieldValue = useCallback((id: string, value: string | boolean | string[]) => {\r\n    setFormFields(fields => fields.map(field => field.id === id ? { ...field, value } : field));\r\n    // Only update preview when button is clicked, not on field changes\r\n  }, []);\r\n\r\n  const handlePdfLoad = useCallback((file: File) => {\r\n    setPdfFile(file);\r\n    // Reset filled fields when new PDF is loaded\r\n    setFilledFields([]);\r\n  }, []);\r\n\r\n  const handleFieldsExtracted = useCallback((fields: FormField[]) => {\r\n    setFormFields(fields);\r\n  }, []);\r\n\r\n  const autoFillWithInstructions = useCallback(() => {\r\n    setFormFields(currentFields => {\r\n      const currentInstructions = instructionsRef.current;\r\n      const updatedFields = [...currentFields];\r\n      \r\n      if (currentInstructions.trim()) {\r\n        const lines = currentInstructions.split('\\n').filter(line => line.trim());\r\n        \r\n        lines.forEach(line => {\r\n          const colonMatch = line.match(/^(.+?):\\s*(.+)$/);\r\n          const equalsMatch = line.match(/^(.+?)\\s*=\\s*(.+)$/);\r\n          \r\n          const match = colonMatch || equalsMatch;\r\n          if (match) {\r\n            const fieldName = match[1].trim();\r\n            const fieldValue = match[2].trim();\r\n            \r\n            // Enhanced field matching\r\n            const matchingFieldIndex = updatedFields.findIndex(field => {\r\n              const normalizedFieldName = field.name.toLowerCase().replace(/[^\\w\\s]/g, ' ').replace(/\\s+/g, ' ').trim();\r\n              const normalizedInputName = fieldName.toLowerCase().replace(/[^\\w\\s]/g, ' ').replace(/\\s+/g, ' ').trim();\r\n              \r\n              // Direct match\r\n              if (normalizedFieldName === normalizedInputName) return true;\r\n              \r\n              // Contains match (either direction)\r\n              if (normalizedFieldName.includes(normalizedInputName) || \r\n                  normalizedInputName.includes(normalizedFieldName)) return true;\r\n              \r\n              // Key word matching for common field types\r\n              const fieldKeywords = ['named', 'insured', 'effective', 'date', 'address', 'phone', 'email', 'company', 'contact', 'primary', 'producer', 'agency', 'network'];\r\n              \r\n              const inputWords = normalizedInputName.split(/\\s+/);\r\n              const fieldWords = normalizedFieldName.split(/\\s+/);\r\n              \r\n              // Check for keyword matches\r\n              const hasKeywordMatch = inputWords.some(inputWord => \r\n                fieldKeywords.includes(inputWord) && fieldWords.some(fieldWord => \r\n                  fieldWord.includes(inputWord) || inputWord.includes(fieldWord)\r\n                )\r\n              );\r\n              \r\n              if (hasKeywordMatch) return true;\r\n              \r\n              // Fuzzy word matching\r\n              const matchingWords = inputWords.filter(inputWord => \r\n                fieldWords.some(fieldWord => \r\n                  fieldWord.includes(inputWord) || inputWord.includes(fieldWord)\r\n                )\r\n              );\r\n              \r\n              return matchingWords.length >= Math.min(inputWords.length, fieldWords.length) * 0.5;\r\n            });\r\n            \r\n            if (matchingFieldIndex !== -1) {\r\n              const matchingField = updatedFields[matchingFieldIndex];\r\n              let newValue: string | boolean | string[];\r\n              \r\n              if (matchingField.type === 'checkbox') {\r\n                newValue = /^(true|yes|1|checked|on|x)$/i.test(fieldValue);\r\n              } else if (matchingField.type === 'radio' || matchingField.type === 'dropdown') {\r\n                const matchingOption = matchingField.options?.find(option =>\r\n                  option.toLowerCase().includes(fieldValue.toLowerCase()) ||\r\n                  fieldValue.toLowerCase().includes(option.toLowerCase())\r\n                );\r\n                newValue = matchingOption || fieldValue;\r\n              } else {\r\n                newValue = fieldValue;\r\n              }\r\n              \r\n              updatedFields[matchingFieldIndex] = { ...matchingField, value: newValue };\r\n              console.log(`Filled \"${matchingField.name}\" with \"${fieldValue}\"`);\r\n            } else {\r\n              console.warn(`Could not find field matching \"${fieldName}\"`);\r\n            }\r\n          }\r\n        });\r\n      }\r\n      \r\n      setFilledFields(updatedFields);\r\n      return updatedFields;\r\n    });\r\n  }, []);\r\n\r\n  const downloadPDF = useCallback(() => {\r\n    const link = document.createElement('a');\r\n    link.href = 'data:application/pdf;base64,JVBERi0xLjQKJdPr6eEKMSAwIG9iago8PAovVHlwZSAvQ2F0YWxvZwovUGFnZXMgMiAwIFIKPj4KZW5kb2JqCg==';\r\n    link.download = 'filled-form.pdf';\r\n    link.click();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"relative min-h-screen w-full overflow-hidden bg-gradient-to-br from-slate-50 via-blue-50 to-indigo-100 dark:from-slate-950 dark:via-blue-950 dark:to-indigo-950\">\r\n      {/* Background elements for visual consistency */}\r\n      <div className=\"absolute inset-0 bg-[radial-gradient(circle_at_1px_1px,rgba(59,130,246,0.15)_1px,transparent_0)] [background-size:24px_24px]\" />\r\n      \r\n      {/* Header */}\r\n      <motion.header \r\n        className=\"relative z-10 bg-white/80 dark:bg-slate-900/80 backdrop-blur-lg border-b border-white/20 dark:border-slate-700/30 shadow-sm\"\r\n        initial={{ opacity: 0, y: -20 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n        transition={{ duration: 0.6 }}\r\n      >\r\n        <div className=\"max-w-7xl mx-auto px-6 py-4 flex justify-between items-center\">\r\n          <motion.div \r\n            className=\"flex items-center gap-3\"\r\n            whileHover={{ scale: 1.02 }}\r\n            transition={{ type: \"spring\", damping: 20, stiffness: 300 }}\r\n          >\r\n            <motion.div \r\n              className=\"p-2 bg-blue-100 dark:bg-blue-900/30 rounded-lg backdrop-blur-sm\"\r\n              whileHover={{ rotate: 360 }}\r\n              transition={{ duration: 0.6 }}\r\n            >\r\n              <FileText className=\"w-6 h-6 text-blue-600 dark:text-blue-400\" />\r\n            </motion.div>\r\n            <div>\r\n              <h1 className=\"text-xl font-semibold text-slate-900 dark:text-white\">PDF Form Filler</h1>\r\n              <p className=\"text-sm text-slate-600 dark:text-slate-400\">Upload, edit, and download your PDF forms</p>\r\n            </div>\r\n          </motion.div>\r\n          \r\n          <motion.div\r\n            whileHover={{ scale: 1.05 }}\r\n            whileTap={{ scale: 0.95 }}\r\n          >\r\n            <Button\r\n              onClick={downloadPDF}\r\n              disabled={!pdfFile}\r\n              className=\"flex items-center space-x-2 px-6 py-3 bg-gradient-to-r from-blue-600 to-indigo-600 hover:from-blue-700 hover:to-indigo-700 text-white rounded-xl font-medium shadow-lg hover:shadow-xl transition-all duration-300 disabled:opacity-50 disabled:cursor-not-allowed backdrop-blur-sm border border-white/10\"\r\n            >\r\n              <Download className=\"w-4 h-4\" />\r\n              <span>Download PDF</span>\r\n            </Button>\r\n          </motion.div>\r\n        </div>\r\n      </motion.header>\r\n\r\n      {/* Main Content */}\r\n      <motion.div \r\n        className=\"relative z-10 max-w-7xl mx-auto px-6 py-8\"\r\n        initial={{ opacity: 0, y: 20 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n        transition={{ duration: 0.8, delay: 0.2 }}\r\n      >\r\n        <div className=\"grid grid-cols-1 xl:grid-cols-2 gap-8 min-h-[calc(100vh-200px)]\">\r\n          {/* Left Panel - File Upload & Preview */}\r\n          <motion.div\r\n            initial={{ opacity: 0, x: -50 }}\r\n            animate={{ opacity: 1, x: 0 }}\r\n            transition={{ duration: 0.8, delay: 0.3 }}\r\n          >\r\n            <FileUploadPreview \r\n              onPdfLoad={handlePdfLoad}\r\n              onFieldsExtracted={handleFieldsExtracted}\r\n              filledFields={filledFields}\r\n            />\r\n          </motion.div>\r\n\r\n          {/* Right Panel - Form Controls */}\r\n          <motion.div \r\n            className=\"space-y-6\"\r\n            initial={{ opacity: 0, x: 50 }}\r\n            animate={{ opacity: 1, x: 0 }}\r\n            transition={{ duration: 0.8, delay: 0.4 }}\r\n          >\r\n            <motion.div\r\n              whileHover={{ scale: 1.01 }}\r\n              transition={{ type: \"spring\", damping: 20, stiffness: 300 }}\r\n            >\r\n              <AutoFillInstructions\r\n                instructions={instructions}\r\n                setInstructions={setInstructionsWithRef}\r\n                autoFill={autoFillWithInstructions}\r\n                disabled={!pdfFile}\r\n              />\r\n            </motion.div>\r\n            \r\n            <motion.div\r\n              whileHover={{ scale: 1.01 }}\r\n              transition={{ type: \"spring\", damping: 20, stiffness: 300 }}\r\n            >\r\n              <ManualFieldEditor formFields={formFields} updateFieldValue={updateFieldValue} />\r\n            </motion.div>\r\n          </motion.div>\r\n        </div>\r\n      </motion.div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"names":[],"mappings":"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","debugId":null}}]
}